#include <Arduino.h>
#include "lcd.h"
#include "tch.h"
#include "menu.h"



#define macrox(pos) ((pos)%12)      // 10x6 の盤、縁を付けて 12x8
#define macroy(pos) ((pos)/12)
#define macropos(x,y) ((x)+(y)*12)

struct pen_move{
  int pos;              // 置く pos
//  int peni[i][k][cnt];        // i=0～11, k=0～7, cnt=0～4
  int i;
  int k;
};

const int pen_color[12]={
  0xc618,0x53d7,0xcd7f,0x0e5f,0xb73d,0x1f36,0xeed3,0xbc8e,0xa254,0xca47,0xed00,0x4d84,
};
struct pen_move pen_move[12];
int peni[12][8][5];           // pos 定義, stopper = 10000
char pen_ban[8][12];          // 盤


extern const char pen[12][8][8][5];

/********************************************************************************/
/*    pen_disp_1                                */
/*    20x20 の正方形を表示する                       */
/*    x=1～10, y=1～6                             */
/********************************************************************************/
void pen_disp_1(int pos, int color)
{
  int x, y;
  
  x = macrox(pos);
  y = macroy(pos);
  if(x<1 || x>10 || y<1 || y>6)
    message("pen_disp_1 err1 x=%d y=%d\n", x, y);
  lcd_clearA((x-1)*20+60, (y-1)*20+60, (x-1)*20+60+20-1, (y-1)*20+60+20-1, color);
}

void pen_waku()
{
  lcd_clearA(60-1, 60-1, 200+60, 60-1, BLACK);
  lcd_clearA(60-1, 120+60, 200+60, 120+60, BLACK);
  lcd_clearA(60-1, 60-1, 60-1, 120+60, BLACK);
  lcd_clearA(200+60, 60-1, 200+60, 120+60, BLACK);
}
/********************************************************************************/
/*    pen_test_move                             */
/*    return 1:置ける、0:置けない                     */
/********************************************************************************/
int pen_test_move(struct pen_move *move)
{
  int cnt, p;
    char *ban = (char*)pen_ban;
  
  for(cnt=0; cnt<5; cnt++){
    p = peni[move->i][move->k][cnt];
    if(ban[move->pos + p])    // 置けない
      return 0;
  }
  return 1;             // 置ける
}
/********************************************************************************/
/*    pen_put_to_disp                             */
/********************************************************************************/
void pen_put_to_disp(struct pen_move *move)
{
  int i, cnt, p, pp, x, y, U, D, R, L;
  
  /*** 四角表示 ***/
  for(cnt=0; cnt<5; cnt++){
    pen_disp_1(move->pos + peni[move->i][move->k][cnt], pen_color[move->i]);
  }
  
  /*** 枠表示  ***/
  for(cnt=0; cnt<5; cnt++){
    p = peni[move->i][move->k][cnt];
    U = D = R = L = 1;
    for(i=0; i<5; i++){
      pp = peni[move->i][move->k][i];
      if(p-12 == pp)        // 上不要
        U = 0;
      if(p+12 == pp)        // 下不要
        D = 0;
      if(p-1 == pp)       // 左不要
        L = 0;
      if(p+1 == pp)       // 右不要
        R = 0;
    }
    x = macrox(move->pos + p);
    y = macroy(move->pos + p);
    if(U)
      lcd_clearA((x-1)*20+60, (y-1)*20+60, (x-1)*20+60+20-1, (y-1)*20+60, BLACK);
    if(D)
      lcd_clearA((x-1)*20+60, (y-1)*20+60+20-1, (x-1)*20+60+20-1, (y-1)*20+60+20-1, BLACK);
    if(L)
      lcd_clearA((x-1)*20+60, (y-1)*20+60, (x-1)*20+60, (y-1)*20+60+20-1, BLACK);
    if(R)
      lcd_clearA((x-1)*20+60+20-1, (y-1)*20+60, (x-1)*20+60+20-1, (y-1)*20+60+20-1, BLACK);
  }
}
/********************************************************************************/
/*    pen_remove_from_disp                          */
/********************************************************************************/
void pen_remove_from_disp(struct pen_move *move)
{
  int cnt;
  
  /*** 四角表示 ***/
  for(cnt=0; cnt<5; cnt++){
    pen_disp_1(move->pos + peni[move->i][move->k][cnt], WHITE);
  }
}
/********************************************************************************/
/*    make_peni                               */
/********************************************************************************/
void make_peni()
{
  int i, k, x, y, cnt, top_pos;
  
  for(i=0; i<12; i++){        // 12個の駒について
    for(k=0; k<8; k++){       // 8回転について
      if(pen[i][k][0][0]==(char)(-1)){
        peni[i][k][0] = 10000;  // stopper
        break;
      }
      top_pos = -1;
      cnt = 0;
      for(x=0; x<5; x++){
        for(y=0; y<8; y++){
          if(pen[i][k][y][x]){
            if(top_pos < 0){
              if(x != 0 || y != 3)  // top pos check
                message("make_peni err1, i=%d k=%d y=%d x=%d\n", i, k, y, x);
              top_pos = macropos(x,y);
            }
            peni[i][k][cnt] = macropos(x,y) - top_pos;
            ++cnt;
          }
        }
      }
      if(cnt != 5)        // 四角の数が５個であること
        message("make_peni err2, i=%d k=%d cnt=%d\n", i, k, cnt);
    }
  }
//  /*** 表示 ***/
//  char a[11][12];
//  int p = macropos(5,5);
//  for(i=0; i<12; i++){
//    for(k=0; k<8; k++){
//      if(peni[i][k][0]==10000)
//        break;
//      memset(a, ' ', sizeof(a));
//      for(cnt=0; cnt<5; cnt++){
//        a[macroy(p+peni[i][k][cnt])][macrox(p+peni[i][k][cnt])] = cnt==0 ? 'A' : 'B';
//      }
//      printf("i=%d k=%d\n", i, k);
//      for(cnt=0; cnt<5; cnt++){
//        printf("%d ", peni[i][k][cnt]);
//      }
//      printf("\n");
//      for(y=0; y<11; y++){
//        for(x=0; x<12; x++){
//          printf("%c", a[y][x]);
//        }
//        printf("\n");
//      }
//    }
//  }
}
/********************************************************************************/
/*    pen_ban_init                              */
/********************************************************************************/
void pen_ban_init()
{
  int x, y;
  
  memset(pen_ban, 0, sizeof(pen_ban));
  for(y=0; y<8; y++){
    pen_ban[y][0] = 1;
    pen_ban[y][12-1] = 1;
  }
  for(x=0; x<12; x++){
    pen_ban[0][x] = 1;
    pen_ban[8-1][x] = 1;
  }
}
/********************************************************************************/
/*    pen_put_to_ban                              */
/********************************************************************************/
void pen_put_to_ban(struct pen_move *move)
{
  int cnt, p;
  char *ban = (char*)pen_ban;
  
  if(peni[move->i][move->k][0]==10000)
    message("put_to_ban err1 i=%d k=%d\n", move->i, move->k);
  for(cnt=0; cnt<5; cnt++){
    p = peni[move->i][move->k][cnt];
    ban[move->pos + p] = 1;
  }
}
/********************************************************************************/
/*    pen_remove_from_ban                           */
/********************************************************************************/
void pen_remove_from_ban(struct pen_move *move)
{
  int cnt, p;
  char *ban = (char*)pen_ban;
  
  if(peni[move->i][move->k][0]==10000)
    message("remove_from_ban err1 i=%d k=%d\n", move->i, move->k);
  for(cnt=0; cnt<5; cnt++){
    p = peni[move->i][move->k][cnt];
    ban[move->pos + p] = 0;
  }
}
/********************************************************************************/
/*    pen_top_pos                               */
/*    盤の空き位置のうち、左の上を返す                    */
/********************************************************************************/
int pen_top_pos()
{
  int x, y, p;
  char *ban = (char*)pen_ban;
    
  for(x=1; x<=10; x++){
    for(y=1; y<=6; y++){
      p = macropos(x,y);
      if(ban[p]==0)
        return p;
    }
  }
  message("pen_top_pos err1\n");
    return 0;
}
/********************************************************************************/
/*      pen_test                                                                */
/********************************************************************************/
void pen_test()
{
    int x, y;
    char *ban = (char*)pen_ban;
    
    for(x=0; x<12; x++){
        if(ban[macropos(x,0)]==0)
            goto err1;
        if(ban[macropos(x,8-1)]==0)
            goto err1;
    }
    for(y=0; y<8; y++){
        if(ban[macropos(0,y)]==0)
            goto err1;
        if(ban[macropos(12-1,y)]==0)
            goto err1;
    }
    return;
    
    err1:; message("pen_test error\n");
}
/********************************************************************************/
/*    pen_disp_all                              */
/********************************************************************************/
void pen_disp_all()
{
  int i;
  
  for(i=0; i<12; i++){
    pen_put_to_disp(&pen_move[i]);
  }
}
/********************************************************************************/
/*    pentomino                               */
/********************************************************************************/
void pentomino(int fast)
{
  int sw, ii, m, up, use[12], count, x, y;
  
    make_peni();
    pen_ban_init();
    lcd_clear(WHITE);
    pen_waku();
  memset(use, 0, sizeof(use));
    count = 0;
  ii = 0;
  up = 1;
  for(;;){
    if(fast==0){
		  if(tch_int()){
			  return;
		  }
    }
//    pen_test();//AAAAA 盤の縁をテスト
    if(up==1){              // 前進した
      for(m=0; m<12; m++){
        if(use[m]==0){
          use[m] = 1;
          break;
        }
      }
      if(m==12)
        message("pentomino err1 ii=%d\n", ii);
      pen_move[ii].i = m;
      pen_move[ii].k = 0;
      pen_move[ii].pos = pen_top_pos();
    }
    else{               // 続きを実行 (後退した)
            if(up==0){
          pen_remove_from_ban(&pen_move[ii]);
          if(fast==0)
          pen_remove_from_disp(&pen_move[ii]);
            }
      ++pen_move[ii].k;
      if(pen_move[ii].k >= 8 || peni[pen_move[ii].i][pen_move[ii].k][0] == 10000){  // 回転方向全部試した
        for(m=pen_move[ii].i+1; m<12; m++){
          if(use[m]==0){
            use[m] = 1;
            break;
          }
        }
        use[pen_move[ii].i] = 0;
        if(m==12){            // 全部テストしたから後退する
          up = 0;
          ii--;
          if(ii<0){         // 終了
            lcd_printf("pentomino end\n");
            tch_input(&x, &y);
//                        sw_updown();
            return;
          }
          continue;
        }
        pen_move[ii].i = m;
        pen_move[ii].k = 0;
      }
    }
    if(pen_test_move(&pen_move[ii])){ // 置けるならば
      pen_put_to_ban(&pen_move[ii]);  // 盤に置く
      if(fast==0){
        pen_put_to_disp(&pen_move[ii]); // 表示する
        delay(100);
      }
      if(ii== 12-1){          // 完成した
        if(fast==0){
          lcd_clear(RED);
          pen_waku();
          pen_disp_all();
          delay(10000);
          
          lcd_clear(WHITE);
          pen_waku();
          pen_disp_all();
        }
        else{
                    lcd_x = lcd_y = 0;
                    lcd_printf("count=%d\n", ++count);
          pen_disp_all();
          if(tch_int()){
          	return;
          }
//          sw = sw_read();
//          if(sw){
//            return;
//          }
        }
        up = 0;
      }
      else{             // 未完成, 前進する
        up = 1;
        ii++;
      }
    }
    else{               // 置けない
      up = 2;             // 続きを実行
    }
  }
}






//
//==============================================================================
//
//const PEN pen1={
const char pen[12][8][8][5]={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,1,1},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  }
},

//const PEN pen2={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,1,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,1,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,1,0},
    {0,0,0,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,1,0},
/**/  {1,1,1,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,1,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
//  {
//    {-1},
//  }
},

//const PEN pen3={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
/**/  {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  }
},

//const PEN pen4={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {0,0,1,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,1,1,0},
/**/  {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,1,1,0},
/**/  {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,1,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
//  {
//    {-1},
//  }
},

//const PEN pen5={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,1,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,1,0,0},
/**/  {1,1,1,0,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  },
},

//const PEN pen6={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,1,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  },
},

//const PEN pen7={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,1,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,1,0,0,0},
    {0,1,1,0,0},
/**/  {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,1,0,0},
/**/  {1,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,1,0,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,1,0,0},
/**/  {1,1,1,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,1,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,1,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
//  {
//    {-1},
//  },
},

//const PEN pen8={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,1,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,1,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,1,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,1,0,0},
/**/  {1,1,1,1,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
//  {
//    {-1},
//  },
},

//const PEN pen9={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,1,0,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,1,0,0},
    {0,1,1,0,0},
/**/  {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,0,0,0},
    {0,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,1,0,0},
/**/  {1,1,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  },
},

//const PEN pen10={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,0,0,0},
    {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {1,1,0,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {1,1,0,0,0},
    {0,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {0,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,1,1,0,0},
/**/  {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
//  {
//    {-1},
//  },
},

//const PEN pen11={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,1,0,0},
    {1,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,1,0,0},
    {1,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {1,0,0,0,0},
    {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,0,0,0},
    {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  },
},

//const PEN pen12={
{
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,1,0,0,0},
    {0,1,0,0,0},
    {0,1,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,1,1,0,0},
    {0,1,0,0,0},
/**/  {1,1,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,1,0,0},
/**/  {1,1,1,0,0},
    {1,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
/**/  {1,0,0,0,0},
    {1,1,1,0,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
  },
  {
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1},
  },
},
};
