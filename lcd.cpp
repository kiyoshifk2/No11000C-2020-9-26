#include <Arduino.h>
#include <stdarg.h>
#include "lcd.h"
#include "tch.h"


Pio *Port_RST = g_APinDescription[LCD_RST].pPort;
Pio *Port_CS  = g_APinDescription[LCD_CS].pPort;
Pio *Port_RS  = g_APinDescription[LCD_RS].pPort;
Pio *Port_WR  = g_APinDescription[LCD_WR].pPort;
Pio *Port_RD  = g_APinDescription[LCD_RD].pPort;
Pio *Port_D0  = g_APinDescription[LCD_D0].pPort;
Pio *Port_D1  = g_APinDescription[LCD_D1].pPort;
Pio *Port_D2  = g_APinDescription[LCD_D2].pPort;
Pio *Port_D3  = g_APinDescription[LCD_D3].pPort;
Pio *Port_D4  = g_APinDescription[LCD_D4].pPort;
Pio *Port_D5  = g_APinDescription[LCD_D5].pPort;
Pio *Port_D6  = g_APinDescription[LCD_D6].pPort;
Pio *Port_D7  = g_APinDescription[LCD_D7].pPort;

unsigned int Mask_RST = g_APinDescription[LCD_RST].ulPin;
unsigned int Mask_CS  = g_APinDescription[LCD_CS].ulPin;
unsigned int Mask_RS  = g_APinDescription[LCD_RS].ulPin;
unsigned int Mask_WR  = g_APinDescription[LCD_WR].ulPin;
unsigned int Mask_RD  = g_APinDescription[LCD_RD].ulPin;
unsigned int Mask_D0  = g_APinDescription[LCD_D0].ulPin;
unsigned int Mask_D1  = g_APinDescription[LCD_D1].ulPin;
unsigned int Mask_D2  = g_APinDescription[LCD_D2].ulPin;
unsigned int Mask_D3  = g_APinDescription[LCD_D3].ulPin;
unsigned int Mask_D4  = g_APinDescription[LCD_D4].ulPin;
unsigned int Mask_D5  = g_APinDescription[LCD_D5].ulPin;
unsigned int Mask_D6  = g_APinDescription[LCD_D6].ulPin;
unsigned int Mask_D7  = g_APinDescription[LCD_D7].ulPin;

int back_color = WHITE;
int text_color = BLACK;
int keisen_color = GRAY;
int graph_color  = RED;

int lcd_x;                  // 0・ｽE・ｽ`25
int lcd_y;                  // 0・ｽE・ｽ`14
int lcd_noofline = 15;            // ・ｽE・ｽP・ｽE・ｽ・ｽE・ｽﾊの行・ｽE・ｽ・ｽE・ｽ
char lcd_text_buf[15][26];


/********************************************************************************/
/*    lcd_printf                                */
/********************************************************************************/
void lcd_printf(const char *fmt, ...)
{
  char buf[200];
  va_list ap;
  
  va_start(ap, fmt);
  vsprintf(buf, fmt, ap);
  va_end(ap);
  lcd_puts(buf);
}
/********************************************************************************/
/*    lcd_puts                                */
/********************************************************************************/
void lcd_puts(const char *str)
{
  while(*str)
    lcd_putc(*str++);
}
/********************************************************************************/
/*    lcd_putc                                */
/********************************************************************************/
void lcd_scroll()
{
  int i;
  
  memmove(lcd_text_buf, lcd_text_buf[1], 26*(lcd_noofline-1));
  memset(lcd_text_buf[lcd_noofline-1], ' ', 26);
  lcd_x = lcd_y = 0;
  for(i=0; i<26*(lcd_noofline-1); i++){
    lcd_putc(((char*)lcd_text_buf)[i]);
  }
  lcd_clearA(0, 16*(lcd_noofline-1), 319, 16*lcd_noofline-1, back_color); // ・ｽﾅ会ｿｽ・ｽs・ｽN・ｽ・ｽ・ｽA
}

void lcd_nl()
{
  lcd_x = 0;
  if(++lcd_y >= lcd_noofline){
    lcd_scroll();           // ・ｽX・ｽN・ｽ・ｽ・ｽ[・ｽ・ｽ
    lcd_x = 0;
    lcd_y = lcd_noofline - 1;
  }
}

void lcd_putc(char c)
{
  if(c=='\n'){
    lcd_nl();             // new line
    return;
  }
  if(lcd_x > 25){
    lcd_nl();
  }
  lcd_disp_char_x1(lcd_x*12, lcd_y*16, c);
  lcd_text_buf[lcd_y][lcd_x] = c;
  ++lcd_x;
}
/********************************************************************************/
/*    lcd_disp_str_x1                             */
/*    ・ｽL・ｽ・ｽ・ｽ・ｽ・ｽ[・ｽl・ｽ・ｽ 10x14 ・ｽ・ｽ・ｽ・ｽ・ｽ・ｽ・ｽ・ｽ・ｽﾂゑｿｽ・ｽ・ｽ 12x16 ・ｽh・ｽb・ｽg・ｽﾌ包ｿｽ・ｽ・ｽ・ｽ・ｽ`・ｽ・ｽ       */
/*    text_color, back_color ・ｽﾌ色・ｽw・ｽ・ｽﾉ従・ｽ・ｽ                  */
/********************************************************************************/
void lcd_disp_str_x1(int x, int y, const char *str)
{
  while(*str){
    lcd_disp_char_x1(x, y, *str);
    ++str;
    x += 12;
  }
}

void lcd_disp_str_x2(int x, int y, const char *str)
{
  while(*str){
    lcd_disp_char_x2(x, y, *str);
    ++str;
    x += 24;
  }
}

void lcd_cdisp_str_x1(int y, const char *str)
{
    int x;
    
    x = (320-strlen(str)*12)/2;
    if(x<0)
        x = 0;
    lcd_disp_str_x1(x, y, str);
}

void lcd_cdisp_str_x2(int y, const char *str)
{
    int x;
    
    x = (320-strlen(str)*24)/2;
    if(x<0)
        x = 0;
    lcd_disp_str_x2(x, y, str);
}
/********************************************************************************/
/*    lcd_disp_char_x1                            */
/*    12x16 ・ｽh・ｽb・ｽg・ｽﾌ包ｿｽ・ｽ・ｽ・ｽ・ｽ`・ｽ・ｽ                        */
/*    text_color, back_color ・ｽﾌ色・ｽw・ｽ・ｽﾉ従・ｽ・ｽ                  */
/*    return 0:success, -1:error                        */
/********************************************************************************/
int lcd_disp_char_x1(int x, int y, char c)
{
  int i, k, x2, y2, cg /*, color*/;
  
  x2 = x + (12-1);
  y2 = y + (16-1);
  if(lcd_area_set(x, y, x2, y2)<0){
    return -1;            // error
  }
  lcd_write_cmd(MemoryWrite);
  for(i=0; i<16; i++){        // 16 ・ｽs・ｽ・ｽ・ｽ・ｽ・ｽﾔに擾ｿｽ・ｽ・ｽ・ｽ・ｽ・ｽ・ｽ
    cg = font[(unsigned char)c][i]; // ・ｽL・ｽ・ｽ・ｽ・ｽ・ｽ[・ｽl・ｽP・ｽs
    for(k=0; k<12; k++){
      if(cg & 1)
        lcd_write_color(text_color);
      else
        lcd_write_color(back_color);
      cg >>= 1;
    }
  }
  return 0;             // success
}

int lcd_disp_char_x2(int x, int y, char c)
{
  int i, k, m, x2, y2, cg /*, color*/;
  
  x2 = x + (24-1);
  y2 = y + (32-1);
  if(lcd_area_set(x, y, x2, y2)<0){
    return -1;            // error
  }
  lcd_write_cmd(MemoryWrite);
  for(i=0; i<16; i++){        // 16 ・ｽs・ｽ・ｽ・ｽ・ｽ・ｽﾔに擾ｿｽ・ｽ・ｽ・ｽ・ｽ・ｽ・ｽ
    for(m=0; m<2; m++){
      cg = font[(unsigned char)c][i]; // ・ｽL・ｽ・ｽ・ｽ・ｽ・ｽ[・ｽl・ｽP・ｽs
      for(k=0; k<12; k++){
        if(cg & 1){
          lcd_write_color(text_color);
          lcd_write_color(text_color);
        }
        else{
          lcd_write_color(back_color);
          lcd_write_color(back_color);
        }
        cg >>= 1;
      }
    }
  }
  return 0;             // success
}
/********************************************************************************/
/*    lcd_area_set                              */
/*    ・ｽl・ｽp・ｽﾌ搾ｿｽ・ｽW・ｽ・ｽ lcd ・ｽﾉセ・ｽb・ｽg・ｽ・ｽ・ｽ・ｽ                      */
/********************************************************************************/
int lcd_area_set(int x1, int y1, int x2, int y2)
{
  if(x1<0 || x1>=320 || x2<0 || x2>=320 || y1<0 || y1>=240 || y2<0 || y2>=240 || x1>x2 || y1>y2)
    return -1;            // error
  lcd_write_cmd(ColumnAddressSet);
  lcd_write_data(x1>>8);        // start ・ｽ・ｽ・ｽ
  lcd_write_data(x1);         // start ・ｽ・ｽ・ｽ・ｽ
  lcd_write_data(x2>>8);        // end ・ｽ・ｽ・ｽ
  lcd_write_data(x2);         // end ・ｽ・ｽ・ｽ・ｽ
  
  lcd_write_cmd(PageAddressSet);
  lcd_write_data(y1>>8);        // start ・ｽ・ｽ・ｽ
  lcd_write_data(y1);         // start ・ｽ・ｽ・ｽ・ｽ
  lcd_write_data(y2>>8);        // end ・ｽ・ｽ・ｽ
  lcd_write_data(y2);         // end ・ｽ・ｽ・ｽ・ｽ
  return 0;             // success
}
/********************************************************************************/
/*    lcd_clear                               */
/*    ・ｽw・ｽ・ｽﾍ囲ゑｿｽh・ｽ・ｽﾂぶゑｿｽ                          */
/********************************************************************************/
int lcd_clearA(int x1, int y1, int x2, int y2, int color)
{
  int i;
  
  lcd_area_set(x1, y1, x2, y2);
  lcd_write_cmd(MemoryWrite);
  for(i=0; i<(x2-x1+1)*(y2-y1+1); i++)
    lcd_write_color(color);
  return 0;             // success
}

//    ・ｽS・ｽ・ｽﾊ塗・ｽ・ｽﾂぶゑｿｽ

int lcd_clear(int color)
{
  lcd_x = lcd_y = 0;
  memset(lcd_text_buf, ' ', sizeof(lcd_text_buf));
  return lcd_clearA(0, 0, 319, 239, color);
}

void lcd_write_square(int x, int y, int w, int h, const short *pat)
{
  int i;
  
  lcd_area_set(x, y, x+w-1, y+h-1);
  lcd_write_cmd(MemoryWrite);
  for(i=0; i<w*h; i++)
    lcd_write_color(pat[i]);
}

void lcd_clear1(char color)
{
	int i;
	
	lcd_area_set(0, 0, 319, 239);
	lcd_write_cmd(MemoryWrite);

	if(color&0x01) Port_D0->PIO_SODR=Mask_D0; else Port_D0->PIO_CODR=Mask_D0;
	if(color&0x02) Port_D1->PIO_SODR=Mask_D1; else Port_D1->PIO_CODR=Mask_D1;
	if(color&0x04) Port_D2->PIO_SODR=Mask_D2; else Port_D2->PIO_CODR=Mask_D2;
	if(color&0x08) Port_D3->PIO_SODR=Mask_D3; else Port_D3->PIO_CODR=Mask_D3;
	if(color&0x10) Port_D4->PIO_SODR=Mask_D4; else Port_D4->PIO_CODR=Mask_D4;
	if(color&0x20) Port_D5->PIO_SODR=Mask_D5; else Port_D5->PIO_CODR=Mask_D5;
	if(color&0x40) Port_D6->PIO_SODR=Mask_D6; else Port_D6->PIO_CODR=Mask_D6;
	if(color&0x80) Port_D7->PIO_SODR=Mask_D7; else Port_D7->PIO_CODR=Mask_D7;

	Port_RS->PIO_SODR = Mask_RS;
	Port_CS->PIO_CODR = Mask_CS;
	for(i=0; i<320*240*2; i++){
		Port_WR->PIO_CODR = Mask_WR;
		Port_WR->PIO_SODR = Mask_WR;
	}
	Port_CS->PIO_SODR = Mask_CS;
}

void lcd_clear_B()
{
	lcd_clear1(0);
}

void lcd_clear_W()
{
	lcd_clear1(0xff);
}
/********************************************************************************/
/*    lcd_init                                */
/********************************************************************************/
void lcd_init()
{
  int i;
  
  pinMode(LCD_RST, OUTPUT);
  pinMode(LCD_RD,  OUTPUT);
  pinMode(LCD_WR,  OUTPUT);
  pinMode(LCD_CS,  OUTPUT);
  pinMode(LCD_RS,  OUTPUT);
  pinMode(LCD_D0,  OUTPUT);
  pinMode(LCD_D1,  OUTPUT);
  pinMode(LCD_D2,  OUTPUT);
  pinMode(LCD_D3,  OUTPUT);
  pinMode(LCD_D4,  OUTPUT);
  pinMode(LCD_D5,  OUTPUT);
  pinMode(LCD_D6,  OUTPUT);
  pinMode(LCD_D7,  OUTPUT);
  
	Port_RST->PIO_SODR = Mask_RST;
	Port_RD->PIO_SODR = Mask_RD;
	Port_WR->PIO_SODR = Mask_WR;
	Port_CS->PIO_SODR = Mask_CS;

  delay(25);
  lcd_write_cmd(0x01);        // Software Reset
  delay(25);
  
  lcd_write_cmd(0x11);        // Sleep Out
  delay(25);
  
  lcd_write_cmd(0x36);        // Memory Access Control
//  lcd_write_data(0byx100000);     // y: Row Address Order x: Column Address Order
  lcd_write_data(0b00100000);     // MY=0, MX=0, MV=1, ML=0, BGR=0, MH=0
//  lcd_write_data(0b11100000);     // MY=0, MX=0, MV=1, ML=0, BGR=0, MH=0
  
  lcd_write_cmd(0x3a);        // Pixel Format Set
  lcd_write_data(0x55);       // 16bit/pixel
  
  lcd_write_cmd(0x53);        // Write CTRL Display
  lcd_write_data(0b00100100);     // BCTRL=1, DD=0, BL=1
  
  lcd_write_cmd(0x29);        // Display ON
}
/********************************************************************************/
/*    fatal                                 */
/********************************************************************************/
void fatal(const char *msg1, const char *msg2, const char *msg3)
{
//  lcd_clear(WHITE);
  back_color = RED;
  text_color = WHITE;
  lcd_disp_str_x2(28, 55, "FATAL error");
  back_color = WHITE;
  text_color = BLACK;
    if(msg1)
      lcd_disp_str_x1(0, 140, msg1);
    if(msg2)
      lcd_disp_str_x1(0, 160, msg2);
    if(msg3)
      lcd_disp_str_x1(0, 180, msg3);
  for(;;)
    ;
}
/********************************************************************************/
/*    message                                 */
/********************************************************************************/

int message(const char *fmt, ...)
{
  int x, y;
  char buf[200];
  va_list ap;
  
  lcd_clear(WHITE);
  back_color = BRUE;
  text_color = WHITE;
  lcd_cdisp_str_x2(55, "Message");
  back_color = WHITE;
  text_color = BLACK;

  lcd_y = 8;
  va_start(ap, fmt);
  vsprintf(buf, fmt, ap);
  va_end(ap);
  lcd_puts(buf);
//  sw_updown();
  tch_input(&x, &y);
    return 0;
}
/********************************************************************************/
/*		lcd_read_data															*/
/********************************************************************************/
int lcd_read_data()
{
	int tmp;
	
//	LCD_RD_C;							// RD clear
//	LCD_RD_C;							// RD clear
//	tmp = LCD_INPUT;					// read data
//	LCD_RD_S;							// RD set
	
	digitalWrite(LCD_RD, LOW);
	
	tmp = 0;
	if(digitalRead(LCD_D0)==HIGH) tmp += 0x01;
	if(digitalRead(LCD_D1)==HIGH) tmp += 0x02;
	if(digitalRead(LCD_D2)==HIGH) tmp += 0x04;
	if(digitalRead(LCD_D3)==HIGH) tmp += 0x08;
	if(digitalRead(LCD_D4)==HIGH) tmp += 0x10;
	if(digitalRead(LCD_D5)==HIGH) tmp += 0x20;
	if(digitalRead(LCD_D6)==HIGH) tmp += 0x40;
	if(digitalRead(LCD_D7)==HIGH) tmp += 0x80;
	
	digitalWrite(LCD_RD, HIGH);
	
	return tmp;
}
/********************************************************************************/
/*    lcd_read_mem                              */
/********************************************************************************/
void lcd_read_mem(int x1, int y1, int x2, int y2, short *buf)
{
  int i, c1, c2, c3;
  
  lcd_area_set(x1, y1, x2, y2);
  lcd_write_cmd(MemoryRead);

  pinMode(LCD_D0,  INPUT);
  pinMode(LCD_D1,  INPUT);
  pinMode(LCD_D2,  INPUT);
  pinMode(LCD_D3,  INPUT);
  pinMode(LCD_D4,  INPUT);
  pinMode(LCD_D5,  INPUT);
  pinMode(LCD_D6,  INPUT);
  pinMode(LCD_D7,  INPUT);

  lcd_read_data();                        // dummy read
  for(i=0; i<(x2-x1+1)*(y2-y1+1); i++){
    c1 = lcd_read_data();
    c2 = lcd_read_data();
    c3 = lcd_read_data();
    *buf++ = RGB(c3, c2, c1);
  }
  
  pinMode(LCD_D0,  OUTPUT);
  pinMode(LCD_D1,  OUTPUT);
  pinMode(LCD_D2,  OUTPUT);
  pinMode(LCD_D3,  OUTPUT);
  pinMode(LCD_D4,  OUTPUT);
  pinMode(LCD_D5,  OUTPUT);
  pinMode(LCD_D6,  OUTPUT);
  pinMode(LCD_D7,  OUTPUT);
}
/********************************************************************************/
/*    lcd_write_data                              */
/********************************************************************************/
void lcd_write_data(int data)
{
	if(data&0x01) Port_D0->PIO_SODR=Mask_D0; else Port_D0->PIO_CODR=Mask_D0;
	if(data&0x02) Port_D1->PIO_SODR=Mask_D1; else Port_D1->PIO_CODR=Mask_D1;
	if(data&0x04) Port_D2->PIO_SODR=Mask_D2; else Port_D2->PIO_CODR=Mask_D2;
	if(data&0x08) Port_D3->PIO_SODR=Mask_D3; else Port_D3->PIO_CODR=Mask_D3;
	if(data&0x10) Port_D4->PIO_SODR=Mask_D4; else Port_D4->PIO_CODR=Mask_D4;
	if(data&0x20) Port_D5->PIO_SODR=Mask_D5; else Port_D5->PIO_CODR=Mask_D5;
	if(data&0x40) Port_D6->PIO_SODR=Mask_D6; else Port_D6->PIO_CODR=Mask_D6;
	if(data&0x80) Port_D7->PIO_SODR=Mask_D7; else Port_D7->PIO_CODR=Mask_D7;

	Port_RS->PIO_SODR = Mask_RS;	// RS = HIGH
	Port_CS->PIO_CODR = Mask_CS;	// CS = LOW
	Port_WR->PIO_CODR = Mask_WR;	// WR = LOW
	Port_WR->PIO_SODR = Mask_WR;	// WR = HIGH
	Port_CS->PIO_SODR = Mask_CS;	// CS = HIGH
}
/********************************************************************************/
/*    lcd_write_cmd                             */
/********************************************************************************/
void lcd_write_cmd(int data)
{
	if(data&0x01) Port_D0->PIO_SODR=Mask_D0; else Port_D0->PIO_CODR=Mask_D0;
	if(data&0x02) Port_D1->PIO_SODR=Mask_D1; else Port_D1->PIO_CODR=Mask_D1;
	if(data&0x04) Port_D2->PIO_SODR=Mask_D2; else Port_D2->PIO_CODR=Mask_D2;
	if(data&0x08) Port_D3->PIO_SODR=Mask_D3; else Port_D3->PIO_CODR=Mask_D3;
	if(data&0x10) Port_D4->PIO_SODR=Mask_D4; else Port_D4->PIO_CODR=Mask_D4;
	if(data&0x20) Port_D5->PIO_SODR=Mask_D5; else Port_D5->PIO_CODR=Mask_D5;
	if(data&0x40) Port_D6->PIO_SODR=Mask_D6; else Port_D6->PIO_CODR=Mask_D6;
	if(data&0x80) Port_D7->PIO_SODR=Mask_D7; else Port_D7->PIO_CODR=Mask_D7;

	Port_RS->PIO_CODR = Mask_RS;	// RS = LOW
	Port_CS->PIO_CODR = Mask_CS;	// CS = LOW
	Port_WR->PIO_CODR = Mask_WR;	// WR = LOW
	Port_WR->PIO_SODR = Mask_WR;	// WR = HIGH
	Port_CS->PIO_SODR = Mask_CS;	// CS = HIGH
}
/********************************************************************************/
/*    lcd_write_color                             */
/********************************************************************************/
void lcd_write_color(int color)
{
  lcd_write_data(color>>8);
  lcd_write_data(color);
}
/********************************************************************************/
/*    chara_gene                                */
/*    12x16 ・ｽh・ｽb・ｽg・ｽL・ｽ・ｽ・ｽ・ｽ・ｽN・ｽ^・ｽ[・ｽl・ｽ・ｽ・ｽ[・ｽ^                    */
/********************************************************************************/
const short font[256][16]={
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x00
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x01
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x02
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x03
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x04
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x05
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x06
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x07
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x08
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x09
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x0a
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x0b
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x0c
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x0d
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x0e
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x0f
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x10
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x11
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x12
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x13
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x14
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x15
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x16
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x17
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x18
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x19
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x1a
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x1b
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x1c
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x1d
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x1e
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x1f
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x20
{0x000,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x000,0x000,0x060,0x060,0x000,0x000,0x000,}, // 0x21
{0x000,0x198,0x198,0x198,0x198,0x198,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x22
{0x000,0x198,0x198,0x198,0x7fe,0x198,0x198,0x198,0x198,0x7fe,0x198,0x198,0x198,0x000,0x000,0x000,}, // 0x23
{0x000,0x060,0x060,0x7fc,0x066,0x066,0x3fc,0x660,0x660,0x660,0x3fe,0x060,0x060,0x000,0x000,0x000,}, // 0x24
{0x000,0x000,0x400,0x60c,0x31e,0x18c,0x0c0,0x060,0x030,0x318,0x78c,0x306,0x002,0x000,0x000,0x000,}, // 0x25
{0x000,0x078,0x0c4,0x0c6,0x066,0x036,0x01c,0x638,0x66c,0x3c6,0x186,0x3e6,0x67c,0x000,0x000,0x000,}, // 0x26
{0x000,0x0f0,0x0c0,0x0c0,0x060,0x030,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x27
{0x000,0x180,0x0e0,0x020,0x030,0x018,0x018,0x018,0x018,0x018,0x030,0x020,0x0e0,0x180,0x000,0x000,}, // 0x28
{0x000,0x018,0x070,0x040,0x0c0,0x180,0x180,0x180,0x180,0x180,0x1c0,0x040,0x070,0x018,0x000,0x000,}, // 0x29
{0x000,0x060,0x060,0x462,0x666,0x36c,0x1f8,0x1f8,0x36c,0x666,0x462,0x060,0x060,0x000,0x000,0x000,}, // 0x2a
{0x000,0x000,0x000,0x060,0x060,0x060,0x060,0x7fe,0x060,0x060,0x060,0x060,0x000,0x000,0x000,0x000,}, // 0x2b
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x0f0,0x0c0,0x0c0,0x0e0,0x030,0x000,0x000,}, // 0x2c
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x7fe,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x2d
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x060,0x0f0,0x060,0x000,0x000,}, // 0x2e
{0x000,0x000,0x400,0x600,0x300,0x180,0x0c0,0x060,0x030,0x018,0x00c,0x006,0x002,0x000,0x000,0x000,}, // 0x2f
{0x000,0x1f8,0x204,0x706,0x786,0x6c6,0x666,0x636,0x61e,0x60e,0x606,0x204,0x1f8,0x000,0x000,0x000,}, // 0x30
{0x000,0x060,0x060,0x078,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x1f8,0x000,0x000,0x000,}, // 0x31
{0x000,0x1f8,0x30c,0x606,0x606,0x300,0x180,0x0c0,0x060,0x030,0x018,0x00c,0x7fe,0x000,0x000,0x000,}, // 0x32
{0x000,0x7fe,0x300,0x180,0x0c0,0x060,0x0c0,0x180,0x300,0x700,0x706,0x306,0x1fc,0x000,0x000,0x000,}, // 0x33
{0x000,0x180,0x1c0,0x1e0,0x1b0,0x198,0x18c,0x186,0x7fe,0x180,0x180,0x180,0x180,0x000,0x000,0x000,}, // 0x34
{0x000,0x7fe,0x006,0x006,0x006,0x1fe,0x300,0x600,0x600,0x600,0x606,0x30e,0x1f8,0x000,0x000,0x000,}, // 0x35
{0x000,0x1f0,0x018,0x00c,0x006,0x006,0x1fe,0x306,0x606,0x606,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x36
{0x000,0x7fe,0x600,0x300,0x180,0x0c0,0x060,0x030,0x030,0x030,0x030,0x030,0x030,0x000,0x000,0x000,}, // 0x37
{0x000,0x1f8,0x30c,0x606,0x606,0x30c,0x1f8,0x30c,0x606,0x606,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x38
{0x000,0x1f8,0x204,0x606,0x606,0x606,0x7fc,0x600,0x600,0x300,0x180,0x0c0,0x078,0x000,0x000,0x000,}, // 0x39
{0x000,0x000,0x000,0x060,0x0f0,0x060,0x000,0x000,0x000,0x060,0x0f0,0x060,0x000,0x000,0x000,0x000,}, // 0x3a
{0x000,0x000,0x000,0x060,0x0f0,0x060,0x000,0x000,0x000,0x0f0,0x0c0,0x0c0,0x060,0x030,0x000,0x000,}, // 0x3b
{0x000,0x180,0x0c0,0x060,0x030,0x018,0x00c,0x006,0x00c,0x018,0x030,0x060,0x0c0,0x180,0x000,0x000,}, // 0x3c
{0x000,0x000,0x000,0x000,0x000,0x7fe,0x000,0x000,0x000,0x7fe,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x3d
{0x000,0x018,0x030,0x060,0x0c0,0x180,0x300,0x600,0x300,0x180,0x0c0,0x060,0x030,0x018,0x000,0x000,}, // 0x3e
{0x000,0x1f8,0x204,0x606,0x606,0x300,0x180,0x0c0,0x060,0x060,0x000,0x000,0x060,0x060,0x000,0x000,}, // 0x3f
{0x000,0x1fc,0x30e,0x606,0x600,0x600,0x618,0x624,0x666,0x666,0x666,0x36c,0x1f8,0x000,0x000,0x000,}, // 0x40
{0x000,0x1f8,0x204,0x606,0x606,0x606,0x606,0x7fe,0x606,0x606,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x41
{0x000,0x1fe,0x306,0x606,0x606,0x306,0x1fe,0x306,0x606,0x606,0x606,0x306,0x1fe,0x000,0x000,0x000,}, // 0x42
{0x000,0x3f8,0x60c,0x606,0x006,0x006,0x006,0x006,0x006,0x606,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x43
{0x000,0x07e,0x0c6,0x186,0x306,0x606,0x606,0x606,0x606,0x306,0x186,0x0c6,0x07e,0x000,0x000,0x000,}, // 0x44
{0x000,0x7fe,0x006,0x006,0x006,0x006,0x1fe,0x006,0x006,0x006,0x006,0x006,0x7fe,0x000,0x000,0x000,}, // 0x45
{0x000,0x7fe,0x006,0x006,0x006,0x006,0x1fe,0x006,0x006,0x006,0x006,0x006,0x006,0x000,0x000,0x000,}, // 0x46
{0x000,0x3f8,0x60c,0x606,0x006,0x006,0x006,0x7c6,0x606,0x606,0x606,0x60c,0x7f8,0x000,0x000,0x000,}, // 0x47
{0x000,0x606,0x606,0x606,0x606,0x606,0x7fe,0x606,0x606,0x606,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x48
{0x000,0x1f8,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x1f8,0x000,0x000,0x000,}, // 0x49
{0x000,0x7e0,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x186,0x186,0x0cc,0x078,0x000,0x000,0x000,}, // 0x4a
{0x000,0x30c,0x18c,0x0cc,0x06c,0x03c,0x01c,0x03c,0x06c,0x0cc,0x18c,0x30c,0x60c,0x000,0x000,0x000,}, // 0x4b
{0x000,0x006,0x006,0x006,0x006,0x006,0x006,0x006,0x006,0x006,0x006,0x006,0x7fe,0x000,0x000,0x000,}, // 0x4c
{0x000,0x606,0x606,0x70e,0x696,0x696,0x666,0x666,0x606,0x606,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x4d
{0x000,0x606,0x606,0x60e,0x61e,0x636,0x666,0x6c6,0x786,0x706,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x4e
{0x000,0x1f8,0x30c,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x4f
{0x000,0x1fe,0x306,0x606,0x606,0x606,0x306,0x1fe,0x006,0x006,0x006,0x006,0x006,0x000,0x000,0x000,}, // 0x50
{0x000,0x1f8,0x30c,0x606,0x606,0x606,0x606,0x606,0x336,0x1e6,0x0c6,0x1ec,0x338,0x600,0x000,0x000,}, // 0x51
{0x000,0x1fe,0x306,0x606,0x606,0x306,0x1fe,0x036,0x066,0x0c6,0x186,0x306,0x606,0x000,0x000,0x000,}, // 0x52
{0x000,0x7f8,0x00c,0x006,0x006,0x00c,0x1f8,0x300,0x600,0x600,0x600,0x300,0x1fe,0x000,0x000,0x000,}, // 0x53
{0x000,0x7fe,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x000,0x000,0x000,}, // 0x54
{0x000,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x55
{0x000,0x606,0x606,0x606,0x606,0x204,0x30c,0x108,0x198,0x090,0x0f0,0x060,0x060,0x000,0x000,0x000,}, // 0x56
{0x000,0x606,0x606,0x606,0x606,0x606,0x606,0x666,0x666,0x666,0x666,0x294,0x198,0x000,0x000,0x000,}, // 0x57
{0x000,0x606,0x606,0x30c,0x198,0x0f0,0x060,0x0f0,0x198,0x30c,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x58
{0x000,0x606,0x606,0x606,0x30c,0x198,0x0f0,0x060,0x060,0x060,0x060,0x060,0x060,0x000,0x000,0x000,}, // 0x59
{0x000,0x7fe,0x600,0x300,0x180,0x0c0,0x060,0x030,0x018,0x00c,0x006,0x006,0x7fe,0x000,0x000,0x000,}, // 0x5a
{0x000,0x1f8,0x018,0x018,0x018,0x018,0x018,0x018,0x018,0x018,0x018,0x018,0x018,0x1f8,0x000,0x000,}, // 0x5b
{0x000,0x606,0x30c,0x198,0x060,0x7fe,0x060,0x060,0x7fe,0x060,0x060,0x060,0x060,0x000,0x000,0x000,}, // 0x5c
{0x000,0x1f8,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x1f8,0x000,0x000,}, // 0x5d
{0x000,0x060,0x0f0,0x198,0x30c,0x606,0x402,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x5e
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x7fe,0x000,}, // 0x5f
{0x000,0x008,0x018,0x030,0x060,0x0c0,0x180,0x100,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x60
{0x000,0x000,0x000,0x000,0x3f8,0x700,0x600,0x600,0x7fc,0x60e,0x606,0x60e,0x7fc,0x000,0x000,0x000,}, // 0x61
{0x000,0x006,0x006,0x006,0x006,0x006,0x1f6,0x31e,0x60e,0x606,0x606,0x30e,0x1fe,0x000,0x000,0x000,}, // 0x62
{0x000,0x000,0x000,0x000,0x1f8,0x00c,0x006,0x006,0x006,0x006,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x63
{0x000,0x600,0x600,0x600,0x600,0x6f8,0x78c,0x706,0x606,0x606,0x606,0x60c,0x7f8,0x000,0x000,0x000,}, // 0x64
{0x000,0x000,0x000,0x000,0x1f8,0x70e,0x606,0x706,0x1fe,0x006,0x006,0x00e,0x3f8,0x000,0x000,0x000,}, // 0x65
{0x000,0x3f0,0x618,0x618,0x018,0x018,0x018,0x07e,0x018,0x018,0x018,0x018,0x018,0x000,0x000,0x000,}, // 0x66
{0x000,0x000,0x000,0x000,0x7f8,0x60c,0x606,0x606,0x606,0x60c,0x7f8,0x600,0x600,0x300,0x1f8,0x000,}, // 0x67
{0x000,0x006,0x006,0x006,0x006,0x1f6,0x21e,0x60e,0x606,0x606,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x68
{0x000,0x060,0x060,0x000,0x000,0x078,0x060,0x060,0x060,0x060,0x060,0x060,0x1f8,0x000,0x000,0x000,}, // 0x69
{0x000,0x000,0x000,0x180,0x000,0x000,0x1e0,0x180,0x180,0x180,0x180,0x186,0x186,0x0cc,0x078,0x000,}, // 0x6a
{0x000,0x00c,0x00c,0x00c,0x00c,0x18c,0x0cc,0x06c,0x03c,0x03c,0x06c,0x0cc,0x18c,0x000,0x000,0x000,}, // 0x6b
{0x000,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x000,0x000,0x000,}, // 0x6c
{0x000,0x000,0x000,0x000,0x18e,0x256,0x666,0x666,0x666,0x606,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x6d
{0x000,0x000,0x000,0x000,0x1e6,0x21e,0x60e,0x606,0x606,0x606,0x606,0x606,0x606,0x000,0x000,0x000,}, // 0x6e
{0x000,0x000,0x000,0x000,0x1f8,0x30c,0x606,0x606,0x606,0x606,0x606,0x30c,0x1f8,0x000,0x000,0x000,}, // 0x6f
{0x000,0x000,0x000,0x000,0x000,0x3fc,0x71c,0x60c,0x60c,0x70c,0x3fc,0x00c,0x00c,0x00c,0x00c,0x000,}, // 0x70
{0x000,0x000,0x000,0x000,0x000,0x000,0x37c,0x386,0x306,0x386,0x3fc,0x300,0x300,0x300,0x300,0x000,}, // 0x71
{0x000,0x000,0x000,0x000,0x1ec,0x63c,0x61c,0x00c,0x00c,0x00c,0x00c,0x00c,0x00c,0x000,0x000,0x000,}, // 0x72
{0x000,0x000,0x000,0x000,0x1fc,0x00e,0x006,0x00e,0x1fc,0x380,0x300,0x380,0x1fe,0x000,0x000,0x000,}, // 0x73
{0x000,0x018,0x018,0x018,0x018,0x07e,0x018,0x018,0x018,0x618,0x618,0x330,0x1e0,0x000,0x000,0x000,}, // 0x74
{0x000,0x000,0x000,0x000,0x306,0x306,0x306,0x306,0x306,0x386,0x386,0x344,0x338,0x000,0x000,0x000,}, // 0x75
{0x000,0x000,0x000,0x000,0x306,0x104,0x18c,0x088,0x0d8,0x050,0x070,0x020,0x020,0x000,0x000,0x000,}, // 0x76
{0x000,0x000,0x000,0x000,0x606,0x606,0x606,0x606,0x606,0x666,0x666,0x294,0x198,0x000,0x000,0x000,}, // 0x77
{0x000,0x000,0x000,0x000,0x606,0x30c,0x198,0x0f0,0x060,0x0f0,0x198,0x30c,0x606,0x000,0x000,0x000,}, // 0x78
{0x000,0x000,0x000,0x000,0x000,0x606,0x606,0x606,0x60c,0x7f8,0x600,0x600,0x600,0x300,0x1f8,0x000,}, // 0x79
{0x000,0x000,0x000,0x000,0x3fe,0x180,0x0c0,0x060,0x030,0x018,0x00c,0x006,0x3fe,0x000,0x000,0x000,}, // 0x7a
{0x000,0x180,0x040,0x060,0x060,0x020,0x020,0x018,0x020,0x020,0x060,0x060,0x040,0x180,0x000,0x000,}, // 0x7b
{0x000,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x000,}, // 0x7c
{0x000,0x018,0x020,0x060,0x060,0x040,0x040,0x180,0x040,0x040,0x060,0x060,0x020,0x018,0x000,0x000,}, // 0x7d
{0x000,0x000,0x000,0x000,0x000,0x000,0x018,0x624,0x666,0x246,0x180,0x000,0x000,0x000,0x000,0x000,}, // 0x7e
{0x000,0x000,0x000,0x000,0x060,0x030,0x018,0x00c,0x7fe,0x00c,0x018,0x030,0x060,0x000,0x000,0x000,}, // 0x7f
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x80
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x81
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x82
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x83
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x84
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x85
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x86
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x87
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x88
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x89
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x8a
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x8b
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x8c
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x8d
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x8e
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x8f
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x90
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x91
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x92
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x93
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x94
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x95
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x96
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x97
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x98
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x99
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x9a
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x9b
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x9c
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x9d
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x9e
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0x9f
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xa0
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x038,0x07c,0x0c6,0x0c6,0x0c6,0x07c,0x038,0x000,}, // 0xa1
{0x000,0x7e0,0x7e0,0x060,0x060,0x060,0x060,0x060,0x060,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xa2
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x060,0x060,0x060,0x060,0x060,0x060,0x07e,0x07e,0x000,}, // 0xa3
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x006,0x00e,0x01c,0x038,0x070,0x060,0x000,}, // 0xa4
{0x000,0x000,0x000,0x000,0x000,0x000,0x060,0x0f0,0x0f0,0x060,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xa5
{0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x7fe,0x7fe,0x600,0x700,0x380,0x1c0,0x0f0,0x070,0x000,}, // 0xa6
{0x000,0x000,0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x360,0x3e0,0x0e0,0x060,0x078,0x018,0x000,}, // 0xa7
{0x000,0x000,0x000,0x000,0x000,0x300,0x380,0x1c0,0x0e0,0x078,0x07e,0x066,0x060,0x060,0x060,0x000,}, // 0xa8
{0x000,0x000,0x000,0x000,0x000,0x060,0x060,0x7fe,0x7fe,0x606,0x606,0x300,0x380,0x1e0,0x0e0,0x000,}, // 0xa9
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x7fe,0x7fe,0x060,0x060,0x060,0x060,0x7fe,0x7fe,0x000,}, // 0xaa
{0x000,0x000,0x000,0x000,0x000,0x180,0x180,0x7fe,0x7fe,0x1e0,0x1f0,0x1b8,0x19c,0x18e,0x186,0x000,}, // 0xab
{0x000,0x000,0x000,0x000,0x000,0x018,0x018,0x7fe,0x7fe,0x618,0x718,0x398,0x198,0x018,0x018,0x000,}, // 0xac
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x1fc,0x1fc,0x180,0x180,0x180,0x180,0x7fe,0x7fe,0x000,}, // 0xad
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x3fc,0x3fc,0x300,0x3fc,0x3fc,0x300,0x3fc,0x3fc,0x000,}, // 0xae
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x666,0x666,0x666,0x600,0x700,0x380,0x1f0,0x070,0x000,}, // 0xaf
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x7fe,0x7fe,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xb0
{0x000,0x7fe,0x7fe,0x600,0x600,0x660,0x360,0x3e0,0x1e0,0x060,0x060,0x030,0x030,0x03c,0x00c,0x000,}, // 0xb1
{0x000,0x600,0x700,0x380,0x1c0,0x0e0,0x070,0x078,0x07c,0x06e,0x066,0x062,0x060,0x060,0x060,0x000,}, // 0xb2
{0x000,0x060,0x060,0x7fe,0x7fe,0x606,0x606,0x600,0x600,0x300,0x300,0x380,0x1c0,0x0f0,0x030,0x000,}, // 0xb3
{0x000,0x000,0x000,0x7fe,0x7fe,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x060,0x7fe,0x7fe,0x000,}, // 0xb4
{0x000,0x0c0,0x0c0,0x7fe,0x7fe,0x0c0,0x0e0,0x0f0,0x0f8,0x0dc,0x0ce,0x0c6,0x0c2,0x0c0,0x0c0,0x000,}, // 0xb5
{0x000,0x030,0x030,0x7fe,0x7fe,0x630,0x630,0x630,0x630,0x618,0x618,0x618,0x70c,0x38e,0x186,0x000,}, // 0xb6
{0x000,0x060,0x060,0x7fe,0x7fe,0x060,0x060,0x060,0x7fe,0x7fe,0x060,0x060,0x060,0x060,0x060,0x000,}, // 0xb7
{0x000,0x000,0x000,0x7f8,0x7f8,0x61c,0x60e,0x606,0x602,0x700,0x380,0x1c0,0x0e0,0x070,0x038,0x000,}, // 0xb8
{0x000,0x018,0x018,0x7f8,0x7fc,0x18c,0x18e,0x186,0x180,0x180,0x180,0x0c0,0x0c0,0x070,0x030,0x000,}, // 0xb9
{0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x600,0x600,0x600,0x600,0x600,0x600,0x7fe,0x7fe,0x000,}, // 0xba
{0x000,0x198,0x198,0x7fe,0x7fe,0x198,0x198,0x198,0x180,0x0c0,0x0c0,0x0c0,0x060,0x078,0x018,0x000,}, // 0xbb
{0x000,0x000,0x000,0x00e,0x00e,0x600,0x600,0x60e,0x30e,0x300,0x180,0x180,0x0c0,0x0fe,0x03e,0x000,}, // 0xbc
{0x000,0x000,0x000,0x7fe,0x7fe,0x700,0x380,0x1c0,0x0e0,0x070,0x0f8,0x1dc,0x38e,0x706,0x602,0x000,}, // 0xbd
{0x000,0x018,0x018,0x7fe,0x7fe,0x618,0x618,0x318,0x318,0x018,0x018,0x018,0x030,0x7f0,0x7c0,0x000,}, // 0xbe
{0x000,0x000,0x000,0x606,0x606,0x606,0x60c,0x60c,0x700,0x300,0x300,0x180,0x1c0,0x0f0,0x070,0x000,}, // 0xbf
{0x000,0x000,0x000,0x7f0,0x7f0,0x638,0x61c,0x61e,0x636,0x760,0x3c0,0x1c0,0x0f0,0x03c,0x00c,0x000,}, // 0xc0
{0x000,0x300,0x300,0x3fe,0x1fe,0x060,0x060,0x7fe,0x7fe,0x060,0x060,0x070,0x038,0x01c,0x00c,0x000,}, // 0xc1
{0x000,0x000,0x000,0x666,0x666,0x666,0x666,0x600,0x600,0x600,0x600,0x300,0x380,0x1f0,0x070,0x000,}, // 0xc2
{0x000,0x1f8,0x1f8,0x000,0x000,0x7fe,0x7fe,0x060,0x060,0x060,0x060,0x060,0x030,0x03c,0x00c,0x000,}, // 0xc3
{0x000,0x030,0x030,0x030,0x030,0x070,0x0f0,0x1f0,0x3b0,0x730,0x230,0x030,0x030,0x030,0x030,0x000,}, // 0xc4
{0x000,0x0c0,0x0c0,0x0c0,0x7fe,0x7fe,0x0c0,0x0c0,0x0c0,0x0c0,0x060,0x060,0x030,0x03c,0x00c,0x000,}, // 0xc5
{0x000,0x000,0x000,0x3fc,0x3fc,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x7fe,0x7fe,0x000,}, // 0xc6
{0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x700,0x318,0x1b8,0x1f0,0x0e0,0x1f0,0x3bc,0x30e,0x006,0x000,}, // 0xc7
{0x000,0x060,0x060,0x7fe,0x7fe,0x700,0x380,0x1e0,0x1f8,0x3fc,0x76e,0x666,0x060,0x060,0x060,0x000,}, // 0xc8
{0x000,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x0c0,0x0c0,0x0e0,0x070,0x03c,0x00c,0x000,}, // 0xc9
{0x000,0x000,0x000,0x060,0x0e0,0x1c0,0x380,0x700,0x600,0x606,0x606,0x606,0x606,0x606,0x606,0x000,}, // 0xca
{0x000,0x006,0x006,0x006,0x006,0x7fe,0x7fe,0x006,0x006,0x006,0x006,0x006,0x00e,0x7fc,0x7f8,0x000,}, // 0xcb
{0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x300,0x300,0x180,0x180,0x0c0,0x0f0,0x03c,0x00c,0x000,}, // 0xcc
{0x000,0x000,0x000,0x030,0x078,0x0fc,0x1ce,0x386,0x702,0x600,0x400,0x000,0x000,0x000,0x000,0x000,}, // 0xcd
{0x000,0x060,0x060,0x7fe,0x7fe,0x060,0x060,0x060,0x060,0x666,0x666,0x666,0x666,0x060,0x060,0x000,}, // 0xce
{0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x700,0x388,0x1dc,0x0f8,0x070,0x0e0,0x1c0,0x080,0x000,}, // 0xcf
{0x000,0x000,0x000,0x1f8,0x1f8,0x000,0x000,0x1f8,0x1f8,0x000,0x000,0x1f8,0x3f8,0x700,0x600,0x000,}, // 0xd0
{0x000,0x0c0,0x0e0,0x070,0x038,0x01c,0x00c,0x00c,0x006,0x306,0x306,0x3fe,0x3fe,0x600,0x600,0x000,}, // 0xd1
{0x000,0x000,0x000,0x600,0x600,0x718,0x3b8,0x1f0,0x0e0,0x1f0,0x3b8,0x31c,0x00e,0x006,0x002,0x000,}, // 0xd2
{0x000,0x000,0x000,0x7fe,0x7fe,0x030,0x030,0x030,0x7fe,0x7fe,0x030,0x030,0x030,0x7e0,0x7c0,0x000,}, // 0xd3
{0x000,0x030,0x030,0x030,0x7fe,0x7fe,0x630,0x630,0x330,0x330,0x030,0x030,0x030,0x030,0x030,0x000,}, // 0xd4
{0x000,0x000,0x000,0x1fc,0x1fc,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x7fe,0x7fe,0x000,}, // 0xd5
{0x000,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x600,0x7fe,0x7fe,0x600,0x600,0x600,0x7fe,0x7fe,0x000,}, // 0xd6
{0x000,0x3fc,0x3fc,0x000,0x000,0x7fe,0x7fe,0x600,0x600,0x700,0x300,0x180,0x1e0,0x078,0x038,0x000,}, // 0xd7
{0x000,0x306,0x306,0x306,0x306,0x306,0x306,0x300,0x180,0x180,0x0c0,0x0c0,0x070,0x03c,0x00c,0x000,}, // 0xd8
{0x000,0x000,0x000,0x060,0x060,0x060,0x060,0x066,0x066,0x066,0x066,0x666,0x666,0x3e6,0x1e6,0x000,}, // 0xd9
{0x000,0x000,0x000,0x006,0x006,0x006,0x006,0x606,0x786,0x186,0x0e6,0x0e6,0x03e,0x01e,0x006,0x000,}, // 0xda
{0x000,0x000,0x000,0x7fe,0x7fe,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x606,0x7fe,0x7fe,0x000,}, // 0xdb
{0x000,0x000,0x000,0x7fe,0x7fe,0x606,0x606,0x600,0x300,0x300,0x180,0x180,0x0e0,0x078,0x018,0x000,}, // 0xdc
{0x000,0x000,0x000,0x006,0x01e,0x018,0x600,0x600,0x600,0x300,0x180,0x1c0,0x0e0,0x03e,0x01e,0x000,}, // 0xdd
{0x000,0x010,0x030,0x062,0x046,0x00c,0x008,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xde
{0x000,0x038,0x07c,0x0c6,0x0c6,0x0c6,0x07c,0x038,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xdf
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe0
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe1
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe2
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe3
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe4
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe5
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe6
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe7
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe8
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xe9
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xea
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xeb
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xec
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xed
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xee
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xef
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf0
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf1
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf2
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf3
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf4
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf5
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf6
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf7
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf8
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xf9
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xfa
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xfb
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xfc
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xfd
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xfe
{0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,}, // 0xff
};
